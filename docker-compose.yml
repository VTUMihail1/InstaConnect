networks:
  instaconnect:

services:
  sqlserver:
    hostname: sqlserver
    image: mcr.microsoft.com/mssql/server:2022-latest
    user: root
    environment:
            SA_PASSWORD: "password123!"
            ACCEPT_EULA: "Y"
    ports:
      - "1433:1433"
    volumes:
      - ./.containers/mysql:/var/opt/mssql/data
    networks:
      - instaconnect
  
  redis:
    image: redis:latest
    restart: always
    environment:
      REDIS_USER: guest
      REDIS_PASSWORD: guest
    command: ["redis-server", "--requirepass", "guest", "--masterauth", "guest"]
    ports:
      - "6379:6379"
    volumes:
      - ./.containers/redis/data/:/data

  rabbitmq:
    image: rabbitmq:management
    hostname: rabbitmq
    environment: 
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "15672:15672"
      - "5672:5672" 
    volumes:
      - ./.containers/rabbit-mq/data/:/var/lib/rabbitmq
      - ./.containers/rabbit-mq/log/:/var/log/rabbitmq
    networks:
      - instaconnect

  gateway-svc:
    image: ${DOCKER_REGISTRY-}gateway-svc
    build:
      context: .
      dockerfile: src/Gateway/InstaConnect.Gateway.Web/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:80
      TokenOptions__AccessTokenSecurityKey: 6R9f6d1Y4Z$0^8Y&S2e3nF4*G6u7D0#L
      TokenOptions__AccountTokenSecurityKey: 8T1z2Q5w&3E8^9N@R7y6K0L3*F6D1#P4
      CorsOptions__AllowedOrigins: gateway-svc:5100
      ReverseProxy__Clusters__identity-cluster__Destinations__destination1__Address: http://identity-svc
      ReverseProxy__Clusters__posts-read-cluster__Destinations__destination1__Address: http://posts-read-svc
      ReverseProxy__Clusters__posts-write-cluster__Destinations__destination1__Address: http://posts-write-svc
      ReverseProxy__Clusters__messages-read-cluster__Destinations__destination1__Address: http://messages-read-svc
      ReverseProxy__Clusters__messages-write-cluster__Destinations__destination1__Address: http://messages-write-svc
      ReverseProxy__Clusters__follows-read-cluster__Destinations__destination1__Address: http://follows-read-svc
      ReverseProxy__Clusters__follows-write-cluster__Destinations__destination1__Address: http://follows-write-svc
    ports:
      - "5100:80"
    networks:
      - instaconnect
  
  identity-svc:
    image: ${DOCKER_REGISTRY-}identity-svc
    build: 
      context: .
      dockerfile: src/Services/Identity/InstaConnect.Identity.Web/Dockerfile
    environment:
      DatabaseOptions__ConnectionString: Server=sqlserver;Database=instaconnect.users;User Id=sa;Password=password123!;MultipleActiveResultSets=true;TrustServerCertificate=True;
      CacheOptions__ConnectionString: redis://guest:guest@redis:6379
      CorsOptions__AllowedOrigins: gateway-svc:5100
      MessageBrokerOptions__Host: amqp://rabbitmq:5672
      MessageBrokerOptions__Username: guest
      MessageBrokerOptions__Password: guest
      AdminOptions__Email: admin@instaconnect.com
      AdminOptions__Password: SecureAdminPass123!
      TokenOptions__AccessTokenSecurityKey: 6R9f6d1Y4Z$0^8Y&S2e3nF4*G6u7D0#L
      TokenOptions__AccountTokenSecurityKey: 8T1z2Q5w&3E8^9N@R7y6K0L3*F6D1#P4
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:80
    ports:
      - "5200:80"
    depends_on:
      - sqlserver
      - rabbitmq
    networks:
      - instaconnect

  posts-read-svc:
    image: ${DOCKER_REGISTRY-}posts-read-svc
    build:
      context: .
      dockerfile: src/Services/Posts/Read/InstaConnect.Posts.Read.Web/Dockerfile
    environment:
      DatabaseOptions__ConnectionString: Server=sqlserver;Database=instaconnect.posts.read;User Id=sa;Password=password123!;MultipleActiveResultSets=true;TrustServerCertificate=True;
      CacheOptions__ConnectionString: redis://guest:guest@redis:6379
      CorsOptions__AllowedOrigins: gateway-svc:5100
      MessageBrokerOptions__Host: amqp://rabbitmq:5672
      MessageBrokerOptions__Username: guest
      MessageBrokerOptions__Password: guest
      TokenOptions__AccessTokenSecurityKey: 6R9f6d1Y4Z$0^8Y&S2e3nF4*G6u7D0#L
      TokenOptions__AccountTokenSecurityKey: 8T1z2Q5w&3E8^9N@R7y6K0L3*F6D1#P4
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:80
    ports:
      - "5300:80"
    depends_on:
      - sqlserver
      - rabbitmq
    networks:
      - instaconnect
   
  posts-write-svc:
    image: ${DOCKER_REGISTRY-}posts-write-svc
    build:
      context: .
      dockerfile: src/Services/Posts/Write/InstaConnect.Posts.Write.Web/Dockerfile
    environment:
      DatabaseOptions__ConnectionString: Server=sqlserver;Database=instaconnect.posts.write;User Id=sa;Password=password123!;MultipleActiveResultSets=true;TrustServerCertificate=True;
      CacheOptions__ConnectionString: redis://guest:guest@redis:6379
      CorsOptions__AllowedOrigins: gateway-svc:5100
      MessageBrokerOptions__Host: amqp://rabbitmq:5672
      MessageBrokerOptions__Username: guest
      MessageBrokerOptions__Password: guest
      TokenOptions__AccessTokenSecurityKey: 6R9f6d1Y4Z$0^8Y&S2e3nF4*G6u7D0#L
      TokenOptions__AccountTokenSecurityKey: 8T1z2Q5w&3E8^9N@R7y6K0L3*F6D1#P4
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:80
    ports:
      - "5400:80"
    depends_on:
      - sqlserver
      - rabbitmq
    networks:
      - instaconnect

  messages-read-svc:
    image: ${DOCKER_REGISTRY-}messages-read-svc
    build:
      context: .
      dockerfile: src/Services/Messages/Read/InstaConnect.Messages.Read.Web/Dockerfile
    environment:
      DatabaseOptions__ConnectionString: Server=sqlserver;Database=instaconnect.messages.read;User Id=sa;Password=password123!;MultipleActiveResultSets=true;TrustServerCertificate=True;
      CacheOptions__ConnectionString: redis://guest:guest@redis:6379
      MessageBrokerOptions__Host: amqp://rabbitmq:5672
      MessageBrokerOptions__Username: guest
      MessageBrokerOptions__Password: guest
      CorsOptions__AllowedOrigins: gateway-svc:5100
      TokenOptions__AccessTokenSecurityKey: 6R9f6d1Y4Z$0^8Y&S2e3nF4*G6u7D0#L
      TokenOptions__AccountTokenSecurityKey: 8T1z2Q5w&3E8^9N@R7y6K0L3*F6D1#P4
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:80
    ports:
      - "5500:80"
    depends_on:
      - sqlserver
      - rabbitmq
    networks:
      - instaconnect

  messages-write-svc:
    image: ${DOCKER_REGISTRY-}messages-write-svc
    build:
      context: .
      dockerfile: src/Services/Messages/Write/InstaConnect.Messages.Write.Web/Dockerfile
    environment:
      DatabaseOptions__ConnectionString: Server=sqlserver;Database=instaconnect.messages.write;User Id=sa;Password=password123!;MultipleActiveResultSets=true;TrustServerCertificate=True;
      CacheOptions__ConnectionString: redis://guest:guest@redis:6379
      MessageBrokerOptions__Host: amqp://rabbitmq:5672
      MessageBrokerOptions__Username: guest
      MessageBrokerOptions__Password: guest
      CorsOptions__AllowedOrigins: gateway-svc:5100
      TokenOptions__AccessTokenSecurityKey: 6R9f6d1Y4Z$0^8Y&S2e3nF4*G6u7D0#L
      TokenOptions__AccountTokenSecurityKey: 8T1z2Q5w&3E8^9N@R7y6K0L3*F6D1#P4
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:80
    ports:
      - "5600:80"
    depends_on:
      - sqlserver
      - rabbitmq
    networks:
      - instaconnect

  follows-read-svc:
    image: ${DOCKER_REGISTRY-}follows-read-svc
    build:
      context: .
      dockerfile: src/Services/Follows/Read/InstaConnect.Follows.Read.Web/Dockerfile
    environment:
      DatabaseOptions__ConnectionString: Server=sqlserver;Database=instaconnect.follows.read;User Id=sa;Password=password123!;MultipleActiveResultSets=true;TrustServerCertificate=True;
      CacheOptions__ConnectionString: redis://guest:guest@redis:6379
      MessageBrokerOptions__Host: amqp://rabbitmq:5672
      MessageBrokerOptions__Username: guest
      MessageBrokerOptions__Password: guest
      CorsOptions__AllowedOrigins: gateway-svc:5100
      TokenOptions__AccessTokenSecurityKey: 6R9f6d1Y4Z$0^8Y&S2e3nF4*G6u7D0#L
      TokenOptions__AccountTokenSecurityKey: 8T1z2Q5w&3E8^9N@R7y6K0L3*F6D1#P4
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:80
    ports:
      - "5700:80"
    depends_on:
      - sqlserver
      - rabbitmq
    networks:
      - instaconnect

  follows-write-svc:
    image: ${DOCKER_REGISTRY-}follows-write-svc
    build:
      context: .
      dockerfile: src/Services/Follows/Write/InstaConnect.Follows.Write.Web/Dockerfile
    environment:
      DatabaseOptions__ConnectionString: Server=sqlserver;Database=instaconnect.follows.write;User Id=sa;Password=password123!;MultipleActiveResultSets=true;TrustServerCertificate=True;
      CacheOptions__ConnectionString: redis://guest:guest@redis:6379
      MessageBrokerOptions__Host: amqp://rabbitmq:5672
      MessageBrokerOptions__Username: guest
      MessageBrokerOptions__Password: guest
      CorsOptions__AllowedOrigins: gateway-svc:5100
      TokenOptions__AccessTokenSecurityKey: 6R9f6d1Y4Z$0^8Y&S2e3nF4*G6u7D0#L
      TokenOptions__AccountTokenSecurityKey: 8T1z2Q5w&3E8^9N@R7y6K0L3*F6D1#P4
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:80
    ports:
      - "5800:80"
    depends_on:
      - sqlserver
      - rabbitmq
    networks:
      - instaconnect
